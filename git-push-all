#!/usr/bin/env ruby
#
# Copyright (C) 2015 Philip Muskovac <yofel@gmx.net>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 
# 1. Redistributions of source code must retain the copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. The name of the author may not be used to endorse or promote products 
#    derived from this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
###############################################################################

require 'optparse'

def getFolderList(path)
    return Dir.glob(path + '/*/git')
end

ciPaused = false
workdir = Dir.pwd

OptionParser.new do |opts|
    opts.banner = "Usage: git-push-all [options]"

    opts.on('-h', '--help', 'Print help') do
        puts opts
        exit
    end

    opts.on('--force-paused',
            "Don't ask Jenkins whether CI has been paused") do
        ciPaused = true
    end

    opts.on('-w', '--workdir [PATH]', 'Work directory') do |w|
        workdir = w
    end
end.parse!

ciPaused = system('check-ci-paused') if not ciPaused

if not ciPaused
    puts "Pause CI first!"
    exit 1
end

getFolderList(workdir).each do |dir|
    Dir.chdir(dir)
    system('git push --follow-tags') or exit 1
end
